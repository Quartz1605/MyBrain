/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 src/assets/energybrian.glb 
*/

import React, { useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'

export function Model(props) {
  const group = useRef()
  const [hovered, setHovered] = useState(false)
  const { nodes, materials, animations } = useGLTF('/energybrian.glb')
  const { actions } = useAnimations(animations, group)
  
  // Enhanced material with glow effect
  const brainMaterial = new THREE.MeshStandardMaterial({
    ...materials.BRAIN_LOW_1001,
    emissive: new THREE.Color(0x4c1d95),
    emissiveIntensity: 0.1,
    roughness: 0.3,
    metalness: 0.1,
  })
  
  // Animation loop for subtle pulsing
  useFrame((state) => {
    if (group.current) {
      // Gentle pulsing effect
      const pulse = Math.sin(state.clock.elapsedTime * 2) * 0.02 + 1
      group.current.scale.setScalar(pulse)
      
      // Enhanced emissive pulsing
      if (brainMaterial.emissive) {
        const intensity = Math.sin(state.clock.elapsedTime * 1.5) * 0.05 + 0.1
        brainMaterial.emissiveIntensity = intensity
      }
      
      // Color shifting based on hover
      if (hovered && brainMaterial.emissive) {
        brainMaterial.emissive.setHSL(
          (Math.sin(state.clock.elapsedTime * 2) + 1) * 0.5 * 0.1 + 0.8, // Hue shifting in purple range
          0.8, // Saturation
          0.5  // Lightness
        )
      }
    }
  })
  
  // Start animations if available
  React.useEffect(() => {
    if (actions && Object.keys(actions).length > 0) {
      Object.values(actions).forEach((action) => {
        action.play()
      })
    }
  }, [actions])
  
  return (
    <group 
      ref={group} 
      {...props} 
      dispose={null}
      onPointerOver={(e) => {
        e.stopPropagation()
        setHovered(true)
        document.body.style.cursor = 'pointer'
      }}
      onPointerOut={(e) => {
        e.stopPropagation()
        setHovered(false)
        document.body.style.cursor = 'auto'
      }}
    >
      <group name="Scene">
        <group name="Empty" rotation={[0, Math.PI / 2, 0]} scale={4.093} />
        <mesh 
          name="Brian" 
          geometry={nodes.Brian.geometry} 
          material={brainMaterial}
          castShadow
          receiveShadow
        >
          {/* Add a subtle wireframe overlay for tech feel */}
          <mesh geometry={nodes.Brian.geometry}>
            <meshBasicMaterial 
              color={hovered ? "#e879f9" : "#c084fc"} 
              wireframe 
              transparent 
              opacity={hovered ? 0.2 : 0.1}
            />
          </mesh>
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/energybrian.glb')
